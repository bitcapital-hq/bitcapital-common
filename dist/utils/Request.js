"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CryptoJS = require("crypto-js");
class RequestUtil {
    /**
     * Generates headers for request signing.
     */
    static sign(secret, req) {
        const now = req.timestamp ? req.timestamp : Date.now();
        const payload = [req.method, req.url, now];
        // Check if should sign body as well
        if ((req.body && req.method.toUpperCase() === "POST") || req.method.toUpperCase() === "PUT") {
            payload.push(req.body);
        }
        // Generate signature using HMAC SHA 256
        const signature = CryptoJS.HmacSHA256(payload.join(","), secret);
        return {
            "X-Request-Signature": signature.toString(),
            "X-Request-Timestamp": now.toString()
        };
    }
}
exports.RequestUtil = RequestUtil;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi91dGlscy9SZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQXNDO0FBY3RDLE1BQWEsV0FBVztJQUN0Qjs7T0FFRztJQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBYyxFQUFFLEdBQTBCO1FBQzNELE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUN2RCxNQUFNLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUUzQyxvQ0FBb0M7UUFDcEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsS0FBSyxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxLQUFLLEtBQUssRUFBRTtZQUMzRixPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN4QjtRQUVELHdDQUF3QztRQUN4QyxNQUFNLFNBQVMsR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFakUsT0FBTztZQUNMLHFCQUFxQixFQUFFLFNBQVMsQ0FBQyxRQUFRLEVBQUU7WUFDM0MscUJBQXFCLEVBQUUsR0FBRyxDQUFDLFFBQVEsRUFBRTtTQUN0QyxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBckJELGtDQXFCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIENyeXB0b0pTIGZyb20gXCJjcnlwdG8tanNcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVxdWVzdFNpZ25pbmdIZWFkZXJzIHtcclxuICBcIlgtUmVxdWVzdC1TaWduYXR1cmVcIjogc3RyaW5nO1xyXG4gIFwiWC1SZXF1ZXN0LVRpbWVzdGFtcFwiOiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVxdWVzdFNpZ25pbmdPcHRpb25zIHtcclxuICBtZXRob2Q6IHN0cmluZztcclxuICB1cmw6IHN0cmluZztcclxuICBib2R5Pzogc3RyaW5nO1xyXG4gIHRpbWVzdGFtcD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFJlcXVlc3RVdGlsIHtcclxuICAvKipcclxuICAgKiBHZW5lcmF0ZXMgaGVhZGVycyBmb3IgcmVxdWVzdCBzaWduaW5nLlxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgc2lnbihzZWNyZXQ6IHN0cmluZywgcmVxOiBSZXF1ZXN0U2lnbmluZ09wdGlvbnMpOiBSZXF1ZXN0U2lnbmluZ0hlYWRlcnMge1xyXG4gICAgY29uc3Qgbm93ID0gcmVxLnRpbWVzdGFtcCA/IHJlcS50aW1lc3RhbXAgOiBEYXRlLm5vdygpO1xyXG4gICAgY29uc3QgcGF5bG9hZCA9IFtyZXEubWV0aG9kLCByZXEudXJsLCBub3ddO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIHNob3VsZCBzaWduIGJvZHkgYXMgd2VsbFxyXG4gICAgaWYgKChyZXEuYm9keSAmJiByZXEubWV0aG9kLnRvVXBwZXJDYXNlKCkgPT09IFwiUE9TVFwiKSB8fCByZXEubWV0aG9kLnRvVXBwZXJDYXNlKCkgPT09IFwiUFVUXCIpIHtcclxuICAgICAgcGF5bG9hZC5wdXNoKHJlcS5ib2R5KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBHZW5lcmF0ZSBzaWduYXR1cmUgdXNpbmcgSE1BQyBTSEEgMjU2XHJcbiAgICBjb25zdCBzaWduYXR1cmUgPSBDcnlwdG9KUy5IbWFjU0hBMjU2KHBheWxvYWQuam9pbihcIixcIiksIHNlY3JldCk7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgXCJYLVJlcXVlc3QtU2lnbmF0dXJlXCI6IHNpZ25hdHVyZS50b1N0cmluZygpLFxyXG4gICAgICBcIlgtUmVxdWVzdC1UaW1lc3RhbXBcIjogbm93LnRvU3RyaW5nKClcclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==